%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for IZ at 2013-06-19 15:24:18 +0200 


%% Saved with string encoding Unicode (UTF-8) 



@misc{Torres2011,
	Abstract = {Open source software represents a new paradigm of software development based on a subjacent community. It is widely accepted in the literature the layered structure of open source communities, being the core group the most active contributors usually located at the center of the community. The tasks of this group include not only an intense activity in terms of contributions but also to promote participation among the rest of the community members. In this paper, the general role of this group is analyzed by modeling communities as Social Networks and applying Social Network Analysis techniques. Findings related their brokerage activity with open source software success.},
	Author = {Torres, M R Martinez and Toral, S L and Perales, M and Barrero, F},
	Booktitle = {2011 International Conference on Complex Intelligent and Software Intensive Systems},
	Date-Added = {2013-06-19 10:45:21 +0000},
	Date-Modified = {2013-06-19 13:23:45 +0000},
	Doi = {10.1109/CISIS.2011.25},
	Isbn = {9780769543734},
	Keywords = {brokerage role,social network analysis,virtual communities,wireless open source communities},
	Pages = {109--114},
	Publisher = {IEEE},
	Title = {{Analysis of the Core Team Role in Open Source Communities}},
	Year = {2011},
	Bdsk-Url-1 = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5988976},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/CISIS.2011.25}}

@article{Samoladas2008,
	Abstract = {Software quality evaluation has always been an important part of software business. The quality evaluation process is usually based on hierarchical quality models that measure various aspects of software quality and deduce a characterization of the product quality being evaluated. The particular nature of open source software has rendered existing models inappropriate for detailed quality evaluations. In this paper, we present a hierarchical quality model that evaluates source code and community processes, based on automatic calculation of metric values and their correlation to a set of predefined quality profiles.1},
	Author = {Samoladas, Ioannis and Gousios, Georgios and Spinellis, Diomidis and Stamelos, Ioannis},
	Date-Added = {2013-06-19 09:26:55 +0000},
	Date-Modified = {2013-06-19 09:26:55 +0000},
	Doi = {10.1007/978-0-387-09684-1},
	Editor = {Russo, Barbara and Damiani, Ernesto and Hissam, Scott and Lundell, Bj\"{o}rn and Succi, Giancarlo},
	Isbn = {9780387096834},
	Issn = {15715736},
	Journal = {Open Source Development Communities and Quality},
	Keywords = {automated measurement,quality models,software metrics},
	Pages = {237--248},
	Publisher = {Springer Boston},
	Series = {IFIP International Federation for Information Processing},
	Title = {{The SQO-OSS Quality Model: Measurement Based Open Source Software Evaluation}},
	Url = {http://dx.doi.org/10.1007/978-0-387-09684-1\_19},
	Volume = {275},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-0-387-09684-1%5C_19},
	Bdsk-Url-2 = {http://dx.doi.org/10.1007/978-0-387-09684-1}}

@inproceedings{Parizi2010,
	Abstract = {In this paper, we propose a hybrid approach based on the aspect-orientation methodology and time series analysis to the runtime monitoring and quality forecasting of OSS. Specifically, the major objective of this work is to combine the idea of time series analysis with the area of software quality assurance of OSS in which statistical techniques for analyzing of time series is used to facilitate the prediction and forecasting (the term `prediction' and `forecasting' are interchangeably used in the literature) of probabilistic quality properties, which are difficult or inapplicable to be evaluated by current approaches such as testing, and also help to increase the reliability and productivity of working OSS system components (towards trustworthy open source software development) requiring extreme runtime quality control. Furthermore, in order to reduce the human effort and to cope with more sophisticated scenarios, this study also aims to automate the analysis and modeling process by providing appropriate tool.},
	Author = {Parizi, Reza Meimandi and Ghani, Abdul Azim Abdul},
	Booktitle = {2010 Eighth ACIS International Conference on Software Engineering Research, Management and Applications},
	Date-Added = {2013-06-19 09:26:05 +0000},
	Date-Modified = {2013-06-19 13:23:28 +0000},
	Doi = {10.1109/SERA.2010.48},
	Isbn = {978-1-4244-7336-6},
	Pages = {329--334},
	Publisher = {IEEE},
	Title = {{Towards Automated Monitoring and Forecasting of Probabilistic Quality Properties in Open Source Software (OSS): A Striking Hybrid Approach}},
	Year = {2010},
	Bdsk-Url-1 = {http://ieeexplore.ieee.org/xpls/abs%5C_all.jsp?arnumber=5489075},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/SERA.2010.48}}

@inproceedings{Crowston2003,
	Abstract = {Information systems success is one of the most widely used dependent variables in information systems research. In this paper, we identify a range of measures that can be used to assess the success of open source software (OSS) projects. We identify measures based on a review of the literature, a consideration of the OSS development process and an analysis of the opinions of OSS developers. For each measure, we provide examples of how they might be used in a study of OSS development.},
	Author = {Crowston, Kevin and Annabi, Hala and Howison, James},
	Booktitle = {Information Systems Journal},
	Date-Added = {2013-06-19 08:16:20 +0000},
	Date-Modified = {2013-06-19 13:22:56 +0000},
	Doi = {10.1.1.10.6110},
	Editor = {Tbd},
	Number = {May},
	Pages = {327--340},
	Publisher = {Citeseer},
	Title = {{Defining open source software project success}},
	Volume = {Paper 4},
	Year = {2003},
	Bdsk-Url-1 = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.10.6110%5C&amp;rep=rep1%5C&amp;type=pdf},
	Bdsk-Url-2 = {http://dx.doi.org/10.1.1.10.6110}}

@article{Michlmayr2005,
	Abstract = {The success of free software and open source projects has increased interest in utilizing the open source model for mature software development. However, the ad hoc nature of open source development may result in poor quality software or failures for a number of volunteer projects. In this paper, projects from SourceForge are assessed to test the hypothesis that there is a relationship between process maturity and the success of free software and open source projects. This study addresses the question of whether the maturity of particular software processes differs in successful and unsuccessful projects. Processes are identified that are key factors in successful free software projects. The insights gained from this study can be applied as to improve the software process used by free software projects.},
	Author = {Michlmayr, Martin},
	Date-Added = {2013-06-19 08:07:36 +0000},
	Date-Modified = {2013-06-19 08:07:36 +0000},
	Editor = {Zielinski, Krzysztof and Szmuc, Tomasz},
	Isbn = {1586035592},
	Journal = {Control},
	Keywords = {free software,open source,process maturity,quality improvement},
	Pages = {3--14},
	Publisher = {IOS Press},
	Title = {{Software Process Maturity and the Success of Free Software Projects}},
	Url = {http://dl.acm.org/citation.cfm?id=1565145},
	Volume = {130},
	Year = {2005},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?id=1565145}}

@article{Raja2006,
	Abstract = {This paper demonstrates the use of Data Mining (DM) techniques in exploratory research. A robust model for identifying the factors that explain the success of Open Source Software (OSS) projects is created, validated and tested. The predictive modeling techniques of Logistic Regression (LR), Decision Trees (DT) and Neural Networks (NN) are used together in this analysis. Using Text Mining results in the predictive modeling process strengthens the model. SAS Enterprise Miner and SAS Text Miner are used in this research.},
	Author = {Raja, Uzma and Tretter, Marietta J},
	Date-Added = {2013-06-19 07:58:45 +0000},
	Date-Modified = {2013-06-19 07:58:45 +0000},
	Journal = {Neural Networks},
	Pages = {1--7},
	Publisher = {Working Paper. Texas A\&M University, College Station Texas},
	Title = {{Investigating open source project success: A data mining approach to model formulation, validation and testing}},
	Url = {http://www2.sas.com/proceedings/sugi31/071-31.pdf},
	Year = {2006},
	Bdsk-Url-1 = {http://www2.sas.com/proceedings/sugi31/071-31.pdf}}

@article{Wu2007,
	Abstract = {We investigated open source software (OSS) developers intentions to continue their involvement in future projects. The research goal was to analyze the motivations of OSS developers systematically and identify those factors that influenced their continuation.Awork motivation model forOSS developers was proposed and a research model was empirically validated using data from a field survey of 148 OSS participants. The results showed that OSS developers feelings of satisfaction and their intentions to continue with OSS development was influenced by both helping behavior and economic incentives and also that adequate motivators existed, though OSS developers did not benefit equally and there was substantial room to improve their experiences as OSS developers},
	Author = {Wu, Chorng-Guang and Gerlach, James H and Young, Clifford E},
	Date-Added = {2013-06-19 07:55:55 +0000},
	Date-Modified = {2013-06-19 07:55:55 +0000},
	Doi = {10.1016/j.im.2006.12.006},
	Issn = {03787206},
	Journal = {Information \& Management},
	Keywords = {continuance,expectancy,expectancy value theory,open source software,satisfaction,valence},
	Number = {3},
	Pages = {253--262},
	Publisher = {Elsevier Science Publishers B. V.},
	Title = {{An empirical analysis of open source software developers' motivations and continuance intentions}},
	Url = {http://linkinghub.elsevier.com/retrieve/pii/S0378720607000067},
	Volume = {44},
	Year = {2007},
	Bdsk-Url-1 = {http://linkinghub.elsevier.com/retrieve/pii/S0378720607000067},
	Bdsk-Url-2 = {http://dx.doi.org/10.1016/j.im.2006.12.006}}

@article{West2008,
	Abstract = {Most research on open source software communities has focused on those that are community founded. More recently, firms have founded their own open source communities. How do sponsored open source communities differ from their autonomous counterparts? With comparative examination of 12 open source projects initiated by corporate sponsors, we identify three design parameters that together help form a participation architecture - the opportunity structure extended to potential external contributors. In exploring sponsors' community design decisions, we found that sponsored open source projects were more likely to offer transparency than they were accessibility and that this had implications for their communities' growth. We contribute theoretical constructs that offer a common basis of comparison for the future study of open source projects and illustrate how the tension between control and growth affects open source community design and creation.},
	Author = {West, Joel and O'mahony, Siobh\'{a}n},
	Date-Added = {2013-06-18 20:28:26 +0000},
	Date-Modified = {2013-06-18 20:28:26 +0000},
	Doi = {10.1080/13662710801970142},
	Issn = {13662716},
	Journal = {Industry Innovation},
	Number = {2},
	Pages = {145--168},
	Publisher = {Routledge},
	Title = {{The Role of Participation Architecture in Growing Sponsored Open Source Communities}},
	Url = {http://www.informaworld.com/openurl?genre=article\&doi=10.1080/13662710801970142\&magic=crossref},
	Volume = {15},
	Year = {2008},
	Bdsk-Url-1 = {http://www.informaworld.com/openurl?genre=article%5C&doi=10.1080/13662710801970142%5C&magic=crossref},
	Bdsk-Url-2 = {http://dx.doi.org/10.1080/13662710801970142}}

@misc{Stewart2005,
	Abstract = {This paper develops and tests a model of the impact of licensing restrictiveness and organizational sponsorship on the popularity and vitality of open source software (OSS) development projects. Using data gathered from Freshmeat.net and OSS project home pages the main conclusions derived from the analysis are that organizational sponsorship has a positive effect on project popularity by easing user concerns about cost and quality and that license restrictiveness may have a negative effect on popularity by reducing the perceived utility of open source software. Theoretical and practical implications are discussed, and the paper outlines several avenues for future research.},
	Author = {Stewart, Katherine and Ammeter, Anthony and Maruping, Likoebe},
	Booktitle = {Proceedings of the 38th Annual Hawaii International Conference on System Sciences},
	Date-Added = {2013-06-18 20:27:05 +0000},
	Date-Modified = {2013-06-19 13:22:38 +0000},
	Doi = {10.1109/HICSS.2005.38},
	Isbn = {0769522688},
	Issn = {15301605},
	Number = {C},
	Pages = {197c--197c},
	Publisher = {Ieee},
	Title = {{A Preliminary Analysis of the Influences of Licensing and Organizational Sponsorship on Success in Open Source Projects}},
	Volume = {7},
	Year = {2005},
	Bdsk-Url-1 = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1385641},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/HICSS.2005.38}}

@misc{Immonen2007,
	Abstract = {The use of Open Source Components (OSCs) is rapidly increasing in software systems. One of the biggest obstacles for the use of OSCs is the fact that the software integrators can not be sure of the quality of the components. Thus, it is the responsibility of the integrators to perform the quality evaluation. When building products using OSCs, the integrators should have a clear method and tools that facilitate and automate the evaluation work. Our contribution is a method and tooling for trustworthiness evaluation and testing of OSCs. The method provides clear guidelines to assist the integrators to perform the evaluation in their own software development environment. The tooling assists in the technical trustworthiness evaluation, containing tools for reliability analysis and testing. The tools are independent, co-operating in the open source context.},
	Author = {Immonen, A and Palviainen, M},
	Booktitle = {Seventh International Conference on Quality Software QSIC 2007},
	Date-Added = {2013-06-18 20:13:59 +0000},
	Date-Modified = {2013-06-18 20:13:59 +0000},
	Doi = {10.1109/QSIC.2007.4385514},
	Isbn = {9780769530352},
	Issn = {15506002},
	Number = {Qsic},
	Pages = {316--321},
	Title = {{Trustworthiness Evaluation and Testing of Open Source Components}},
	Year = {2007},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/QSIC.2007.4385514}}

@inproceedings{Maki-Asiala2006,
	Abstract = {The breakthrough of open source software (OSS) is not only evident when looking at the gradually rising interest in OSS research but also when observing the field of software business. Clearly OSS provides one of many opportunities for companies to speed up their software development and lower its costs. However, there are risks involved in using open source (OS) components such as multitude of licenses and lack of liabilities and information when it comes to the quality of the components. Considering quality it is perilous to include components with questionable quality to software development project. This is particularly true in product family engineering (PFE) and component based software engineering (CBSE), since the effects of low quality are experienced on a larger scale than a single project. Therefore it is imperative to study how commercial companies today perceive and assure the quality of these components in their new context and environment and what are the conceptions of companies about QA in OS communities. The research was conducted by interviewing representatives of nine Finnish IT companies utilizing OS components},
	Author = {Maki-Asiala, Pekka and Matinlassi, Mari},
	Booktitle = {30th Annual International Computer Software and Applications Conference (COMPSAC'06)},
	Date-Added = {2013-06-18 19:42:11 +0000},
	Date-Modified = {2013-06-19 13:22:21 +0000},
	Doi = {10.1109/COMPSAC.2006.153},
	Isbn = {0-7695-2655-1},
	Pages = {189--194},
	Publisher = {IEEE},
	Title = {{Quality Assurance of Open Source Components: Integrator Point of View}},
	Year = {2006},
	Bdsk-Url-1 = {http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=4020166},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/COMPSAC.2006.153}}

@inproceedings{Yu2009,
	Address = {New York, New York, USA},
	Author = {Yu, Liguo and Ramaswamy, S. and Lenin, R. B. and Narasimhan, V. L.},
	Booktitle = {Proceedings of the 47th Annual Southeast Regional Conference on - ACM-SE 47},
	Date-Added = {2013-06-18 15:09:55 +0000},
	Date-Modified = {2013-06-19 13:24:15 +0000},
	Doi = {10.1145/1566445.1566531},
	File = {:Users/izaytsev/Library/Application Support/Mendeley Desktop/Downloaded/Yu et al. - 2009 - Time series analysis of open-source software projects.pdf:pdf},
	Isbn = {9781605584218},
	Keywords = {correlation,mailing lists,prediction,regression},
	Month = mar,
	Pages = {1},
	Publisher = {ACM Press},
	Title = {{Time series analysis of open-source software projects}},
	Year = {2009},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?id=1566445.1566531},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/1566445.1566531}}

@article{Stewart2006,
	Abstract = {What differentiates successful from unsuccessful open source software projects? This paper develops and tests a model of the impacts of license restrictiveness and organizational sponsorship on two indicators of success: user interest in, and development activity on, open source software development projects. Using data gathered from Freshmeat.net and project home pages, the main conclusions derived from the analysis are that (1) license restrictiveness and organizational sponsorship interact to influence user perceptions of the likely utility of open source software in such a way that users are most attracted to projects that are sponsored by nonmarket organizations and that employ nonrestrictive licenses, and (2) licensing and sponsorship address complementary developer motivations such that the influence of licensing on development activity depends on what kind of organizational sponsor a project has. Theoretical and practical implications are discussed, and the paper outlines several avenues for future research.},
	Author = {Stewart, Katherine J and Ammeter, Anthony P and Maruping, Likoebe M},
	Date-Added = {2013-06-18 14:51:56 +0000},
	Date-Modified = {2013-06-19 13:22:45 +0000},
	Doi = {10.1287/isre.1060.0082},
	Issn = {10477047},
	Journal = {Information Systems Research},
	Number = {2},
	Pages = {126--144},
	Publisher = {INFORMS: Institute for Operations Research},
	Title = {{Impacts of License Choice and Organizational Sponsorship on User Interest and Development Activity in Open Source Software Projects}},
	Volume = {17},
	Year = {2006},
	Bdsk-Url-1 = {http://isr.journal.informs.org/cgi/doi/10.1287/isre.1060.0082},
	Bdsk-Url-2 = {http://dx.doi.org/10.1287/isre.1060.0082}}

@article{Okoli2010,
	Abstract = {Levy and Ellis (2006) and Webster and Watson (2002) lament the fact that information systems (IS) scholars tend to be unaware of the need for structure in literature reviews. Even today, the rigorous, standardized methodology for conducting a systematic literature review (SLR) that has developed from the health sciences and other fields is virtually unknown in IS research. In this paper, we adapt Fink's (2005, p. 3) definition of a research literature review as our operative definition of a systematic literature review: "a systematic, explicit, comprehensive, (p. 17) and reproducible method for identifying, evaluating, and synthesizing the existing body of completed and recorded work produced by researchers, scholars, and practitioners." Although there exists an abundance of guides to conducting such reviews in other research fields, none entirely meet the unique needs of IS researchers. In response to this shortage of guides, we present here the features and value of a systematic literature review, and adapt the methodology to the particular context of IS research.},
	Author = {Okoli, Chitu and Schabram, Kira},
	Date-Added = {2013-06-17 13:43:52 +0000},
	Date-Modified = {2013-06-17 13:43:52 +0000},
	File = {:Users/izaytsev/Library/Application Support/Mendeley Desktop/Downloaded/Okoli, Schabram - 2010 - A Guide to Conducting a Systematic Literature Review of Information Systems Research.pdf:pdf},
	Issn = {15356078},
	Journal = {Sprouts Working Papers on Information Systems},
	Number = {26},
	Pages = {1--49},
	Series = {Sprouts: Working Papers on Information System},
	Title = {{A Guide to Conducting a Systematic Literature Review of Information Systems Research}},
	Url = {http://sprouts.aisnet.org/867/1/OkoliSchabram2010SproutsLitReviewGuide.pdf},
	Volume = {10},
	Year = {2010},
	Bdsk-Url-1 = {http://sprouts.aisnet.org/867/1/OkoliSchabram2010SproutsLitReviewGuide.pdf}}

@incollection{Harmsen1994,
	Author = {Harmsen, Frank and Brinkkemper, Sjaak and Oei, Han},
	Booktitle = {Methods and Associated Tools for the Information Systems Life Cycle},
	Date-Added = {2013-06-14 14:14:12 +0000},
	Date-Modified = {2013-06-14 14:14:12 +0000},
	Editor = {Verrijn-Stuart, A A and Olle, William T},
	Isbn = {0444820744},
	Number = {September},
	Pages = {169--194},
	Publisher = {Elsevier Science Inc.},
	Title = {{Situational Method Engineering for Information System Project Approaches}},
	Year = {1994}}

@article{VanDeWeerd2008,
	Author = {{Van De Weerd}, Inge and Brinkkemper, Sjaak},
	Chapter = {III},
	Date-Added = {2013-06-14 14:12:55 +0000},
	Date-Modified = {2013-06-14 14:12:55 +0000},
	Doi = {10.4018/978-1-59904-887-1},
	Editor = {Syed, Mahbubur Rahman and Syed, Sharifun Nessa},
	Isbn = {1599048876},
	Journal = {Handbook of Research on Modern Systems Analysis and Design Technologies and Applications},
	Pages = {35},
	Publisher = {Information Science Publishing},
	Title = {{Meta-modeling for situational analysis and design methods}},
	Url = {http://services.igi-global.com/resolvedoi/resolve.aspx?doi=10.4018/978-1-59904-887-1},
	Year = {2008},
	Bdsk-Url-1 = {http://services.igi-global.com/resolvedoi/resolve.aspx?doi=10.4018/978-1-59904-887-1},
	Bdsk-Url-2 = {http://dx.doi.org/10.4018/978-1-59904-887-1}}

@article{Subramaniam2009,
	Abstract = {In this paper, we investigate open source software (OSS) success using longitudinal data on OSS projects. We find that restrictive OSS licenses have an adverse impact on OSS success. On further analysis, restrictive OSS license is found to be negatively associated with developer interest, but is positively associated with the interest of non-developer users and project administrators. We also show that developer and non-developer interest in the OSS project and the project activity levels in any time period significantly affect the project success measures in subsequent time period. The implications of our findings for OSS research and practice are discussed.},
	Author = {Subramaniam, Chandrasekar and Sen, Ravi and Nelson, Matthew L},
	Date-Added = {2013-06-13 13:57:39 +0000},
	Date-Modified = {2013-06-13 13:57:39 +0000},
	Doi = {10.1016/j.dss.2008.10.005},
	Issn = {01679236},
	Journal = {Decision Support Systems},
	Number = {2},
	Pages = {576--585},
	Publisher = {Elsevier B.V.},
	Title = {{Determinants of open source software project success: A longitudinal study}},
	Url = {http://linkinghub.elsevier.com/retrieve/pii/S0167923608001814},
	Volume = {46},
	Year = {2009},
	Bdsk-Url-1 = {http://linkinghub.elsevier.com/retrieve/pii/S0167923608001814},
	Bdsk-Url-2 = {http://dx.doi.org/10.1016/j.dss.2008.10.005}}

@article{Samoladas2010,
	Abstract = {Context Open source (FLOSS) project survivability is an important piece of information for many open source stakeholders. Coordinators of open source projects would like to know the chances for the survival of the projects they coordinate. Companies are also interested in knowing how viable a project is in order to either participate or invest in it, and volunteers want to contribute to vivid projects.Objective The purpose of this article is the application of survival analysis techniques for estimating the future development of a FLOSS project.Method},
	Author = {Samoladas, Ioannis and Angelis, Lefteris and Stamelos, Ioannis},
	Date-Added = {2013-06-13 13:06:16 +0000},
	Date-Modified = {2013-06-13 13:06:16 +0000},
	Doi = {10.1016/j.infsof.2010.05.001},
	Issn = {09505849},
	Journal = {Information and Software Technology},
	Number = {9},
	Pages = {902--922},
	Publisher = {Elsevier B.V.},
	Title = {{Survival analysis on the duration of open source projects}},
	Url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584910000790},
	Volume = {52},
	Year = {2010},
	Bdsk-Url-1 = {http://linkinghub.elsevier.com/retrieve/pii/S0950584910000790},
	Bdsk-Url-2 = {http://dx.doi.org/10.1016/j.infsof.2010.05.001}}

@article{Izquierdo-Cortazar2010,
	Abstract = {Plenty of companies try to access Free/Libre/Open Source Software (FLOSS) products, but they find a lack of documentation and responsiveness from the libre software community. But not all of the communities have the same capacity to answer questions. Even more, most of these communities are driven by volunteers which in most of the cases work on their spare time. Thus, how active and reliable is a community and how can we measure their risks in terms of quality of the community is a main issue to be resolved. Trying to determine how a community runs and look for their weaknesses is a way to improve themselves and, also, a way to obtain trustworthiness from an enterprise point of view. In order to have a statistical basement, around 1400 FLOSS projects have been studied to create thresholds which will help to determine a projecttextquoterights current status compared with this initial set of FLOSS communities.},
	Author = {Izquierdo-Cortazar, D and Gonz\'{a}lez-Barahona, J and Robles, G and Deprez, J and Auvray, V},
	Chapter = {28},
	Date-Added = {2013-06-13 13:04:21 +0000},
	Date-Modified = {2013-06-13 13:04:21 +0000},
	Doi = {10.1007/978-3-642-13244-5\_28},
	Editor = {Agerfalk, P\"{a}r and Boldyreff, Cornelia and Gonzalez-Barahona, Jesus M and Madey, Gregory and Noll, John},
	Institution = {Springer Boston},
	Isbn = {9783642132438},
	Journal = {Open Source Software New Horizons},
	Keywords = {data mining,libre software communities,quality models},
	Pages = {336--341},
	Publisher = {Springer},
	Series = {IFIP Advances in Information and Communication Technology},
	Title = {{FLOSS Communities: Analyzing Evolvability and Robustness from an Industrial Perspective}},
	Url = {http://www.springerlink.com/index/133874R355505135.pdf},
	Volume = {319},
	Year = {2010},
	Bdsk-Url-1 = {http://www.springerlink.com/index/133874R355505135.pdf},
	Bdsk-Url-2 = {http://dx.doi.org/10.1007/978-3-642-13244-5%5C_28}}

@article{Weiss2005,
	Abstract = {What makes an open source project successful? In this paper we show that the traditional factors of success of open source projects, such as number of downloads, deployments or commits are sometimes inconvenient or even insufficient. We then correlate success of an open source project with its popularity on the Web. We show several ideas of how such popularity could be measured using Web search engines and provide experimental results from quantitative analysis of the proposed measures on representative large samples of open source projects from SourceForge.},
	Author = {Weiss, Dawid},
	Date-Added = {2013-06-13 13:02:49 +0000},
	Date-Modified = {2013-06-13 13:02:49 +0000},
	Editor = {Scotto, Marco and Succi, Giancarlo},
	Journal = {Technology},
	Keywords = {g600 software engineering,g610 software design},
	Number = {December},
	Pages = {93--99 TS -- BeitraginSammelband},
	Publisher = {kein Verlag},
	Title = {{Measuring success of open source projects using web search engines}},
	Url = {http://eprints.lincoln.ac.uk/76/},
	Year = {2005},
	Bdsk-Url-1 = {http://eprints.lincoln.ac.uk/76/}}

@article{Wahyudin2007,
	Abstract = {Purpose -- In response to the increasing number of open-source software (OSS) project initiatives and the increasing demand of OSS products as alternative solutions by industries, it is important for particular stakeholders such as the project host/supporter project-leading teams, and prospective customers to determine whether a project initiative is likely to be sustainable and is worth supporting. This paper aims to propose a concept of ``health'' indicators and an evaluation process that can help to get a status overview of OSS projects in a timely fashion and predict project survivability based on the project data available on web repositories.

Design/methodology/approach -- For initial empirical evaluation of the concept, the indicators are applied to well-known web-based OSS projects (Apache Tomcat and Apache HTTP Server) and the results are compared with challenged projects (Apache Xindice and Apache Slide). The results are discussed with OSS experts to investigate the external validity of the indicators.

Findings -- From a software project management point of view, a typical web-based OSS project can be viewed as a web-engineering process, since most OSS projects exploit the benefits of a web platform and enable the project community to collaborate using web-based project tools and repositories such as mailing lists, bug trackers, and versioning systems (CVS/SVN) to deliver web systems and applications. These repositories can provide rich collections of process data, and artifacts which can be analyzed to better understand the project status.},
	Author = {Wahyudin, Dindin and Mustofa, Khabib and Schatten, Alexander and Biffl, Stefan and Tjoa, A. Min},
	Date-Added = {2013-06-13 12:52:25 +0000},
	Date-Modified = {2013-06-19 13:24:06 +0000},
	Doi = {10.1108/17440080710829252},
	Issn = {1744-0084},
	Journal = {International Journal of Web Information Systems - IJWIS},
	Keywords = {Computer software,Internet,Project management},
	Language = {en},
	Month = sep,
	Number = {1/2},
	Pages = {116--139},
	Publisher = {Emerald Group Publishing Limited},
	Title = {{Monitoring the ``health'' status of open source web-engineering projects}},
	Volume = {3},
	Year = {2007},
	Bdsk-Url-1 = {http://www.emeraldinsight.com/10.1108/17440080710829252},
	Bdsk-Url-2 = {http://dx.doi.org/10.1108/17440080710829252},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QLS4uLy4uLy4uLy5UcmFzaC9NeSBDb2xsZWN0aW9uIDEwLjA2LjM2IFBNLmJpYtIXCxgZV05TLmRhdGFPEQG2AAAAAAG2AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAADHiPBASCsAAAe6Ny4dTXkgQ29sbGVjdGlvbiAxMC4wNi4zNiBQTS5iaWIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8Oukc3mhKEAAAAAAAAAAAADAAIAAAkgAAAAAAAAAAAAAAAAAAAABi5UcmFzaAAQAAgAAMeI4jAAAAARAAgAAM3maIEAAAABAAwHujcuAAWrkwAAkZ8AAgBDTWFjaW50b3NoIEhEOlVzZXJzOgBpemF5dHNldjoALlRyYXNoOgBNeSBDb2xsZWN0aW9uIDEwLjA2LjM2IFBNLmJpYgAADgA8AB0ATQB5ACAAQwBvAGwAbABlAGMAdABpAG8AbgAgADEAMAAuADAANgAuADMANgAgAFAATQAuAGIAaQBiAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAM1VzZXJzL2l6YXl0c2V2Ly5UcmFzaC9NeSBDb2xsZWN0aW9uIDEwLjA2LjM2IFBNLmJpYgAAEwABLwAAFQACAA///wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgC+AMMAywKFAocCjAKXAqACrgKyArkCwgLHAtQC1wLpAuwC8QAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALz}}

@article{Crowston2005,
	Abstract = {Metaphors, such as the Cathedral and Bazaar, used to describe the organization of FLOSS projects typically place them in sharp contrast to proprietary development by emphasizing FLOSS's distinctive social and communications structures. But what do we really know about the communication patterns of FLOSS projects? How generalizable are the projects that have been studied? Is there consistency across FLOSS projects? Questioning the assumption of distinctiveness is important because practitioner--advocates from within the FLOSS community rely on features of social structure to describe and account for some of the advantages of FLOSS production. To address this question, we examined 120 project teams from SourceForge, representing a wide range of FLOSS project types, for their communications centralization as revealed in the interactions in the bug tracking system. We found that FLOSS development teams vary widely in their communications centralization, from projects completely centered on one developer to projects that are highly decentralized and exhibit a distributed pattern of conversation between developers and active users. We suggest, therefore, that it is wrong to assume that FLOSS projects are distinguished by a particular social structure merely because they are FLOSS. Our findings suggest that FLOSS projects might have to work hard to achieve the expected development advantages which have been assumed to flow from "going open." In addition, the variation in communications structure across projects means that communications centralization is useful for comparisons between FLOSS teams. We found that larger FLOSS teams tend to have more decentralized communication patterns, a finding that suggests interesting avenues for further research examining, for example, the relationship between communications structure and code modularity.},
	Author = {Crowston, Kevin and Howison, James},
	Date-Added = {2013-06-13 12:36:50 +0000},
	Date-Modified = {2013-06-13 12:36:50 +0000},
	Doi = {10.5210/fm.v10i2.1207},
	Issn = {13960466},
	Journal = {First Monday},
	Month = feb,
	Pages = {2--7},
	Title = {{The social structure of free and open source software development}},
	Url = {http://firstmonday.org/ojs/index.php/fm/article/view/1207/1127},
	Volume = {10},
	Year = {2005},
	Bdsk-Url-1 = {http://firstmonday.org/ojs/index.php/fm/article/view/1207/1127},
	Bdsk-Url-2 = {http://dx.doi.org/10.5210/fm.v10i2.1207}}

@article{Hawkins2004,
	Author = {Hawkins, Richard E.},
	Date-Added = {2013-06-13 12:26:55 +0000},
	Date-Modified = {2013-06-13 12:26:55 +0000},
	Doi = {10.1007/s11066-004-2717-z},
	Issn = {1385-9587},
	Journal = {NETNOMICS: Economic Research and Electronic Networking},
	Month = aug,
	Number = {2},
	Pages = {103--117},
	Title = {{The economics of open source software for a competitive firm}},
	Url = {http://link.springer.com/10.1007/s11066-004-2717-z},
	Volume = {6},
	Year = {2004},
	Bdsk-Url-1 = {http://link.springer.com/10.1007/s11066-004-2717-z},
	Bdsk-Url-2 = {http://dx.doi.org/10.1007/s11066-004-2717-z}}

@article{Bessen2001,
	Abstract = {E software, developed by volunteers, appears counter to the conventional wisdom that private provision of public goods is socially more efficient. But complexity makes a difference. Under standard models, development contracts for specialized software may be difficult to write and ownership rights do not necessarily elicit socially optimal effort. I consider three mechanisms that improve the likelihood that firms can obtain the software they need: pre-packaged software, Application Program Interfaces (APIs) and Free/Open Source software (FOSS). I show that with complex software, some firms will choose to participate in FOSS over both "make or buy" and this increases social welfare. In general, FOSS complements proprietary provision, rather than replacing it. Pre-packaged software can coexist in the marketplace with FOSS: pre-packaged software addresses common uses with limited feature sets, while firms with specialized, more complex needs use FOSS.},
	Author = {Bessen, James E},
	Date-Added = {2013-06-13 12:25:36 +0000},
	Date-Modified = {2013-06-13 12:25:36 +0000},
	Doi = {10.2139/ssrn.588763},
	Editor = {Bitzer, Jargen and Schraeder, Philipp J H},
	Institution = {Research on Innovation},
	Isbn = {9780444527691},
	Issn = {15565068},
	Journal = {Social Science Research Network},
	Number = {July},
	Pages = {57--81},
	Publisher = {SSRN},
	Title = {{Open Source Software: Free Provision Of Complex Public Goods}},
	Url = {http://www.ssrn.com/abstract=588763},
	Year = {2001},
	Bdsk-Url-1 = {http://www.ssrn.com/abstract=588763},
	Bdsk-Url-2 = {http://dx.doi.org/10.2139/ssrn.588763}}

@article{von2001learning,
	Author = {{Von Hippel}, Eric},
	Date-Added = {2013-06-13 12:23:51 +0000},
	Date-Modified = {2013-06-13 12:23:51 +0000},
	Journal = {MIT Sloan management review},
	Number = {4},
	Pages = {82--86.},
	Title = {{Learning from open-source software}},
	Volume = {42},
	Year = {2001}}

@article{Bosch2009,
	Abstract = {Software product line companies increasingly expand their platform outside their organizational boundaries, in effect transitioning to a software ecosystem approach. In this paper, we discuss the emerging trend of software ecosystems and provide a overview of the key concepts and implications of adopting a software ecosystem approach. We define the notion of software ecosystems and introduce a taxonomy. Finally, we explore the implications of software ecosystems to the way companies build software.},
	Author = {Bosch, J},
	Date-Added = {2013-06-13 12:22:15 +0000},
	Date-Modified = {2013-06-13 12:22:15 +0000},
	File = {:Users/izaytsev/Library/Application Support/Mendeley Desktop/Downloaded/Bosch - 2009 - From software product lines to software ecosystems.pdf:pdf},
	Journal = {SPLC '09 Proceedings of the 13th International Software Product Line Conference},
	Number = {Splc},
	Pages = {1--10},
	Title = {{From software product lines to software ecosystems}},
	Year = {2009}}

@article{Jansen2009,
	Abstract = {Software vendors lack the perspective to develop soft- ware within a software ecosystem. The inability to function in a software ecosystem has already led to the demise of many software vendors, leading to loss of competition, in- tellectual property, and eventually jobs in the software in- dustry. In this paper we present a research agenda on soft- ware ecosystems to study both the technical and the busi- ness aspects of software engineering in vibrant ecosystems. The results of such research enable software vendors to de- velop software that is adaptable to new business models and new markets, and to make strategic choices that help a soft- ware vendor to thrive in a software ecosystem.},
	Author = {Jansen, Slinger and Finkelstein, Anthony and Brinkkemper, Sjaak},
	Date-Added = {2013-06-13 12:19:32 +0000},
	Date-Modified = {2013-06-13 12:19:32 +0000},
	File = {:Users/izaytsev/Library/Application Support/Mendeley Desktop/Downloaded/Jansen, Finkelstein, Brinkkemper - 2009 - A sense of community A research agenda for software ecosystems.pdf:pdf},
	Journal = {31st International Conference on Software Engineering (ICSE 2009)},
	Pages = {2--5},
	Title = {{A sense of community: A research agenda for software ecosystems}},
	Year = {2009}}
